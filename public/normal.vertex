precision highp float;

attribute vec3 position;
attribute vec3 normal;
attribute vec2 uv;

uniform mat4 worldViewProjection;
uniform mat4 worldView;
uniform mat4 world;

varying vec4 vPosition;
varying vec3 vNormal;
varying vec2 vUV;

void main() {
    vec4 p = vec4( position, 1.0 );
    vPosition = p;
    
    vec4 test = vec4(normal.x, normal.y, -normal.z, 0.0);
     test = vec4(-normal.x, normal.y, normal.z, 0.0);
    vNormal = (transpose(inverse(worldView)) * vec4(normal, 0.0)).xyz;
    // vNormal = (transpose(inverse(worldViewProjection)) * test).xyz;
    vNormal.z = - vNormal.z;
    //world space normal
    // vNormal = (transpose(inverse(world)) * vec4(normal, 0.0)).xyz;
    // vNormal =  * normal;
    vUV = uv;
    gl_Position = worldViewProjection * p;
}